# This workflow is intended to be called by workflows in our various software
# repos containing Sphinx documentation projects.
# See workflow-templates/docs-ci.yaml (a "starter" workflow) in this repo for
# an example of what the caller workflow looks like.
name: Sphinx docs CI

on:
  workflow_call:
    inputs:
      repo:
        description: >-
          Repository name with owner (e.g. nextstrain/zika).  Defaults to the
          repository of the caller workflow.
        type: string
        default: ${{ github.repository }}
        required: false

      docs-directory:
        description: >-
          Directory containing Makefile. (e.g. docs/)
        type: string
        required: true

      environment-file:
        description: >-
          Path to conda environment file. (e.g. docs/conda.yml)
        type: string
        required: false

      pip-install-target:
        description: >-
          Pip install target. (e.g. local directory which contains setup.py, project URL)
        type: string
        required: false

      make-target:
        description: >-
          Sphinx builder name. See https://www.sphinx-doc.org/en/master/man/sphinx-build.html#options
        type: string
        default: html

env:
  # Used for `make` steps.
  # -n: warn on missing references
  # -W: error on warnings
  # --keep-going: find all warnings
  # https://www.sphinx-doc.org/en/master/man/sphinx-build.html
  SPHINXOPTS: -n -W --keep-going

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}

      # Set up environment with Conda
      - if: inputs.environment-file != ''
        uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: ${{ inputs.environment-file }}
      - if: inputs.environment-file != ''
        run: conda list

      # Set up environment with pip
      - if: inputs.pip-install-target != ''
        run: pip install '${{ inputs.pip-install-target }}'
      - if: inputs.pip-install-target != ''
        run: pip list

      - run: make ${{ inputs.make-target }}
        working-directory: ${{ inputs.docs-directory }}

      - run: make linkcheck
        working-directory: ${{ inputs.docs-directory }}
