name: CI

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  test-setup-nextstrain-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./actions/setup-nextstrain-cli
      - run: nextstrain version --verbose

  test-pathogen-repo-ci:
    uses: ./.github/workflows/pathogen-repo-ci.yaml
    with:
      repo: nextstrain/zika
    secrets: inherit

  test-pathogen-repo-ci-no-example-data:
    uses: ./.github/workflows/pathogen-repo-ci.yaml
    with:
      repo: nextstrain/zika-tutorial

  test-pathogen-repo-ci-with-build-dir:
    uses: ./.github/workflows/pathogen-repo-ci.yaml
    with:
      repo: nextstrain/monkeypox
      build-dir: phylogenetic
      artifact-name: mpox-phylogenetic

  test-pathogen-repo-ci-failure:
    uses: ./.github/workflows/pathogen-repo-ci.yaml
    with:
      repo: nextstrain/zika-tutorial
      build-args: __BOGUS_BUILD_TARGET__
      continue-on-error: true

  test-docs-ci-conda:
    uses: ./.github/workflows/docs-ci.yaml
    with:
      repo: nextstrain/docs.nextstrain.org
      docs-directory: .
      environment-file: environment.yml

  test-docs-ci-pip:
    uses: ./.github/workflows/docs-ci.yaml
    with:
      repo: nextstrain/augur
      docs-directory: docs/
      pip-install-target: .[dev]

  test-pathogen-repo-build:
    permissions:
      id-token: write
    strategy:
      matrix:
        runtime: [docker, conda]
    uses: ./.github/workflows/pathogen-repo-build.yaml
    with:
      repo: nextstrain/zika-tutorial
      runtime: ${{ matrix.runtime }}
      run: nextstrain build --env BOGUS_ENVVAR .
      artifact-name: build-output-${{ matrix.runtime }}
      env: |
        BOGUS_ENVVAR: BOGUS_ENVVAR
    secrets: inherit

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: ./devel/check-readme
      - uses: ./actions/shellcheck
